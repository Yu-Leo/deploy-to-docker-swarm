stages:
  - docker-images

.setup-docker-images: &setup-docker-images
  - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
  - apk --no-cache add git curl grep
  - chmod +x ./gen-version.sh && ./gen-version.sh

docker-images:
  stage: docker-images
  rules:
    - if: $CI_MERGE_REQUEST_LABELS =~ /build-front/
      when: always
    - if: $CI_MERGE_REQUEST_ID
      when: manual
  allow_failure: false

  image: docker:24.0.5
  services:
    - docker:24.0.5-dind

  before_script:
    - *setup-docker-images

  script:
    - docker build -t $CI_REGISTRY_IMAGE/front:$(cat build/build_version.tmp) -f ./Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/front:$(cat build/build_version.tmp)
  after_script:
    - >
      if [ $CI_JOB_STATUS == 'success' ]; then
        curl \
          --location \
          --request POST "https://gitlab.com/api/v4/projects/$CI_MERGE_REQUEST_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes" \
          --header "PRIVATE-TOKEN: $MY_GITLAB_TOKEN" \
          --header "Content-Type: application/json" \
          --data-raw "{ \"body\": \":white_check_mark: **front** image was successfully built. Tag: **$(cat build/build_version.tmp)**\" }"
      else
          curl \
            --location \
            --request POST "https://gitlab.com/api/v4/projects/$CI_MERGE_REQUEST_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes" \
            --header "PRIVATE-TOKEN: $MY_GITLAB_TOKEN" \
            --header "Content-Type: application/json" \
            --data-raw "{ \"body\": \":x: **failed** to build and push one or more images\" }"
      fi
